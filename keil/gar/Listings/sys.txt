; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\sys.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\sys.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Library\Device\Nuvoton\Nano100Series\Include -I..\Library\StdDriver\inc -I..\Library\CMSIS\Include -IC:\Users\rui\AppData\Local\Arm\Packs\Nuvoton\NuMicro_DFP\1.3.19\Device\NANO100BN\Include -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=538 --omf_browse=.\objects\sys.crf ..\Library\StdDriver\src\sys.c]
                          THUMB

                          AREA ||i.SYS_ClearResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_ClearResetSrc PROC
;;;31       */
;;;32     void SYS_ClearResetSrc(uint32_t u32Src)
000000  2105              MOVS     r1,#5
;;;33     {
;;;34         SYS->RST_SRC |= u32Src;
000002  0709              LSLS     r1,r1,#28
000004  684a              LDR      r2,[r1,#4]
000006  4302              ORRS     r2,r2,r0
000008  604a              STR      r2,[r1,#4]
;;;35     }
00000a  4770              BX       lr
;;;36     
                          ENDP


                          AREA ||i.SYS_DisableBOD||, CODE, READONLY, ALIGN=2

                  SYS_DisableBOD PROC
;;;159      */
;;;160    void SYS_DisableBOD(void)
000000  4802              LDR      r0,|L2.12|
;;;161    {
;;;162        SYS->BODCTL = SYS->BODCTL & ~(SYS_BODCTL_BOD25_EN_Msk | SYS_BODCTL_BOD20_EN_Msk | SYS_BODCTL_BOD17_EN_Msk);
000002  6a41              LDR      r1,[r0,#0x24]
000004  08c9              LSRS     r1,r1,#3
000006  00c9              LSLS     r1,r1,#3
000008  6241              STR      r1,[r0,#0x24]
;;;163    }
00000a  4770              BX       lr
;;;164    
                          ENDP

                  |L2.12|
                          DCD      0x50000040

                          AREA ||i.SYS_DisableIRCTrim||, CODE, READONLY, ALIGN=2

                  SYS_DisableIRCTrim PROC
;;;187      */
;;;188    void SYS_DisableIRCTrim(void)
000000  4901              LDR      r1,|L3.8|
;;;189    {
;;;190        SYS->IRCTRIMCTL = 0;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;191    }
000006  4770              BX       lr
;;;192    
                          ENDP

                  |L3.8|
                          DCD      0x50000080

                          AREA ||i.SYS_EnableBOD||, CODE, READONLY, ALIGN=2

                  SYS_EnableBOD PROC
;;;149      */
;;;150    void SYS_EnableBOD(int32_t i32Mode, uint32_t u32BODLevel)
000000  4a03              LDR      r2,|L4.16|
;;;151    {
;;;152        SYS->BODCTL = (SYS->BODCTL & ~0xFFF) | (i32Mode | u32BODLevel);
000002  6a53              LDR      r3,[r2,#0x24]
000004  4308              ORRS     r0,r0,r1
000006  0b1b              LSRS     r3,r3,#12
000008  031b              LSLS     r3,r3,#12
00000a  4303              ORRS     r3,r3,r0
00000c  6253              STR      r3,[r2,#0x24]
;;;153    }
00000e  4770              BX       lr
;;;154    
                          ENDP

                  |L4.16|
                          DCD      0x50000040

                          AREA ||i.SYS_EnableIRCTrim||, CODE, READONLY, ALIGN=2

                  SYS_EnableIRCTrim PROC
;;;176      */
;;;177    void SYS_EnableIRCTrim(uint32_t u32TrimSel,uint32_t u32TrimEnInt)
000000  b510              PUSH     {r4,lr}
;;;178    {
;;;179        SYS->IRCTRIMIEN = (SYS->IRCTRIMIEN & ~(SYS_IRCTRIMIEN_TRIM_FAIL_IEN_Msk|SYS_IRCTRIMIEN_32K_ERR_IEN_Msk)) | u32TrimEnInt;
000002  4a06              LDR      r2,|L5.28|
000004  6853              LDR      r3,[r2,#4]
000006  2406              MOVS     r4,#6
000008  43a3              BICS     r3,r3,r4
00000a  430b              ORRS     r3,r3,r1
00000c  6053              STR      r3,[r2,#4]
;;;180        SYS->IRCTRIMCTL = (SYS->IRCTRIMCTL & ~SYS_IRCTRIMCTL_TRIM_SEL_Msk)|u32TrimSel;
00000e  6811              LDR      r1,[r2,#0]
000010  0889              LSRS     r1,r1,#2
000012  0089              LSLS     r1,r1,#2
000014  4301              ORRS     r1,r1,r0
000016  6011              STR      r1,[r2,#0]
;;;181    }
000018  bd10              POP      {r4,pc}
;;;182    
                          ENDP

00001a  0000              DCW      0x0000
                  |L5.28|
                          DCD      0x50000080

                          AREA ||i.SYS_GetBODStatus||, CODE, READONLY, ALIGN=2

                  SYS_GetBODStatus PROC
;;;43       */
;;;44     uint32_t SYS_GetBODStatus()
000000  4801              LDR      r0,|L6.8|
;;;45     {
;;;46         return (SYS->BODSTS);
000002  6a80              LDR      r0,[r0,#0x28]
;;;47     }
000004  4770              BX       lr
;;;48     
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x50000040

                          AREA ||i.SYS_GetResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_GetResetSrc PROC
;;;53       */
;;;54     uint32_t SYS_GetResetSrc(void)
000000  2005              MOVS     r0,#5
;;;55     {
;;;56         return (SYS->RST_SRC);
000002  0700              LSLS     r0,r0,#28
000004  6840              LDR      r0,[r0,#4]
;;;57     }
000006  4770              BX       lr
;;;58     
                          ENDP


                          AREA ||i.SYS_IsRegLocked||, CODE, READONLY, ALIGN=2

                  SYS_IsRegLocked PROC
;;;64       */
;;;65     uint32_t SYS_IsRegLocked(void)
000000  4802              LDR      r0,|L8.12|
;;;66     {
;;;67         return !(SYS->RegLockAddr & SYS_RegLockAddr_RegUnLock_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  07c0              LSLS     r0,r0,#31
000006  17c0              ASRS     r0,r0,#31
000008  1c40              ADDS     r0,r0,#1
;;;68     }
00000a  4770              BX       lr
;;;69     
                          ENDP

                  |L8.12|
                          DCD      0x50000100

                          AREA ||i.SYS_ReadPDID||, CODE, READONLY, ALIGN=1

                  SYS_ReadPDID PROC
;;;74       */
;;;75     uint32_t  SYS_ReadPDID(void)
000000  2005              MOVS     r0,#5
;;;76     {
;;;77         return SYS->PDID;
000002  0700              LSLS     r0,r0,#28
000004  6800              LDR      r0,[r0,#0]
;;;78     }
000006  4770              BX       lr
;;;79     
                          ENDP


                          AREA ||i.SYS_ResetCPU||, CODE, READONLY, ALIGN=1

                  SYS_ResetCPU PROC
;;;94       */
;;;95     void SYS_ResetCPU(void)
000000  2005              MOVS     r0,#5
;;;96     {
;;;97         SYS->IPRST_CTL1 |= SYS_IPRST_CTL1_CPU_RST_Msk;
000002  0700              LSLS     r0,r0,#28
000004  6881              LDR      r1,[r0,#8]
000006  2202              MOVS     r2,#2
000008  4311              ORRS     r1,r1,r2
00000a  6081              STR      r1,[r0,#8]
;;;98     }
00000c  4770              BX       lr
;;;99     
                          ENDP


                          AREA ||i.SYS_ResetChip||, CODE, READONLY, ALIGN=1

                  SYS_ResetChip PROC
;;;84       */
;;;85     void SYS_ResetChip(void)
000000  2005              MOVS     r0,#5
;;;86     {
;;;87         SYS->IPRST_CTL1 |= SYS_IPRST_CTL1_CHIP_RST_Msk;
000002  0700              LSLS     r0,r0,#28
000004  6881              LDR      r1,[r0,#8]
000006  2201              MOVS     r2,#1
000008  4311              ORRS     r1,r1,r2
00000a  6081              STR      r1,[r0,#8]
;;;88     }
00000c  4770              BX       lr
;;;89     
                          ENDP


                          AREA ||i.SYS_ResetModule||, CODE, READONLY, ALIGN=1

                  SYS_ResetModule PROC
;;;128      */
;;;129    void SYS_ResetModule(uint32_t u32ModuleIndex)
000000  2105              MOVS     r1,#5
;;;130    {
;;;131        *(volatile uint32_t *)((uint32_t)&(SYS->IPRST_CTL1) + (u32ModuleIndex>>24)) |= 1<<(u32ModuleIndex & 0x00ffffff);
000002  0e02              LSRS     r2,r0,#24
000004  0709              LSLS     r1,r1,#28
000006  1851              ADDS     r1,r2,r1
000008  688b              LDR      r3,[r1,#8]
00000a  2201              MOVS     r2,#1
00000c  4082              LSLS     r2,r2,r0
00000e  4313              ORRS     r3,r3,r2
000010  608b              STR      r3,[r1,#8]
;;;132        *(volatile uint32_t *)((uint32_t)&(SYS->IPRST_CTL1) + (u32ModuleIndex>>24)) &= ~(1<<(u32ModuleIndex & 0x00ffffff));
000012  6888              LDR      r0,[r1,#8]
000014  4390              BICS     r0,r0,r2
000016  6088              STR      r0,[r1,#8]
;;;133    }
000018  4770              BX       lr
;;;134    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Library\\StdDriver\\src\\sys.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_sys_c_962b9fbe____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REVSH|
#line 402
|__asm___5_sys_c_962b9fbe____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
